<Webアプリケーション>
WebブラウザからWebサーバ(インターネット経由でアクセスできるPC)を経由して利用できるプログラム全般

<フレームワーク>
アプリケーションを効率良く開発・保守を行うために汎用的な処理をまとめたプログラム群の事
・DBとの連携や認証機能など、必要な機能があらかじめ用意されている
・コーディングの規約が用意されていて、一貫性のある開発が行いやすい

<MVC>
Model、View、Controllerの略
・Model ... プログラムとDBの連携や、データの処理を行う役割
・View ... 画面への情報の表示や入出力に関する役割
・Controller ... ユーザーの入力に基づき、ModelとViewを制御する役割

<Spring Framework>
柔軟性・生産性・安全性の３つの特徴を持ち、様々なWebアプリケーションを安全にかつ効率よく開発できるように設計されています。

<Springプロジェクト>
・Spring Boot...複数のフレームワークを連携する際に、標準的な設定を自動構成し迅速なアプリ開発を可能とする。
・Spring Framework...Springプロジェクトの基本となるプロジェクト。DIやAOPなどコアな機能を提供します。
・Spring Data...データソースへのアクセスを管理するための機能を提供します。
・Spring MVC...Spring Frameworkに含まれるWebアプリ開発のためのフレームワークです。
・Spring Security...認証およびアクセス制御を提供します。

<Spring Boot>
・複雑なプロジェクト同士の連携をサポート
・あらかじめオススメのプロジェクトの組み合わせを用意してくれ、自動で連携の設定をしてくれます
・他にも作成したWebアプリケーションにアクセスするためのWebサーバが内包されている

<IDE>
Integrated Development Environmentの略で日本語では「統合開発環境」と言います。
アプリケーション開発に必要な機能がまとまっており、効率よく開発するためには欠かせないツールです。
Java開発全般で用いられるEclipseやSpringプロジェクトでの開発に特化したSTSなどがあります。

<Eclipse>
Javaの開発現場で最も利用されるIDEで、Eclipse自体がJavaで開発されています。
オープンソースなため無償で利用することができ、またプラグイン(追加機能のこと)を組み込むことで自由にEclipseを拡張できます。

<Pleiades All in One>
Eclipseの本語化を行うためのPleiadesプラグインと一般的によく使われるプラグインをEclipseに追加したパッケージ

<リクエスト>
ブラウザからサーバーへの通信。クライアント(システムの利用者)は主に次の3つの方法によってリクエストします。
・アドレスバーにURLを入力する
・リンクをクリックする
・フォームを送信する

<レスポンス>
リクエストに対するサーバからの応答
・Webサーバ...リクエストを受け、アプリケーションサーバに情報を渡し、最終的にHTMLなどのレスポンスを返す
・アプリケーションサーバ...プログラムを実行し、処理結果をWebサーバに渡す(Webサーバと一体になってることも)
・データベースサーバ...アプリケーションサーバからの要求に応じて、データ操作(登録、更新、取得、削除)を行う
