
<ブランチ運用>

ブランチ名：master、main
役割：本番公開用のブランチ
補足：お客さんに公開する完成品を管理するためのブランチです。最終的にはこのブランチに集約させます。多くの場合、このブランチ内のプログラムを直接書き換えることはせず、確認用のブランチでチェックをした内容を取り込むのが一般的です。このブランチ内を直接書き換える=お客さんが見ているシステムが変化してしまうため、安全面を考えてローカルリポジトリには持ってこないor許可されない場合があります。実業務では絶対に書き換えないようにしましょう。

ブランチ名：staging
役割：最終確認用のブランチ
補足：追加機能などを本番用のブランチに反映する一歩前のブランチです。開発した機能が正常に動作するか、エラーが起こらないか、などを最終チェックするために用意されることが多いです。基本的には本番用のブランチと同様の状態にし、様々な確認を行います。最終確認を実施した結果、問題がなければこのブランチの内容を本番用のブランチに反映させていきます。

ブランチ名：development、develop、dev
役割：開発確認用のブランチ
補足：それぞれが作業した内容を一つに集めて確認するためのブランチです。最終確認用のブランチとは異なり、開発した機能が他の機能に影響が出ていないか動作確認したりする用途に使われます。他にもテスト用のデータを入れるために使われたりもします。

ブランチ名：ブランチ名は現場によって大きく異なる
役割：個人用の作業ブランチ
補足：本番用のブランチや最終確認用のブランチから作成し、追加機能や修正などを行うのが基本の流れになります。作業用のブランチで開発した機能を開発確認→最終確認→本番という流れで進めていくイメージです。実際に業務を行う上ではこのブランチをたくさん作って作業することになるかと思います。
ブランチ名は現場によって大きく異なるのも特徴です。チケットと呼ばれるやることリストのようなものがあるのですが、そのチケット名をブランチ名にしたり、どの時点のバージョンから派生したのかがわかるような名前にしたり、「ユーザー名_日付」なんてパターンもあったりします。作業用のブランチの名前だけに限った話ではないですが、その時に応じたプロジェクト内のルールに従って名前を付けるようにしましょう。



<Gitを取り扱う注意点>

・最低限のコマンド操作はできるように身に着けておきましょう。
・他のメンバーに相談するなどして自分一人で無理にどうにかしようと考えないようにしましょう。
・ミスを起こさないようにGitの操作は慎重に実行するように気を配る。
・他の人に影響が出ない場所を用意して練習するなども大切です。
